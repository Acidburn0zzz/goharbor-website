.module--key-features{

  @mixin flex-child-item-end-gutter($count:1){
    @for $i from 1 to ($count+1){
      &:nth-last-of-type(#{$i}){
        padding-bottom:0!important;
      }
    }
  }

  @mixin flex-child-item-grid(){

    $num-of-items:(
            "mobile":1,
            "tablet":2,
            "desktop":3
    );

    flex-basis: calc(100%/#{map_get($num-of-items,mobile)});
    padding:0 0 $item-gutter 0;
    box-sizing: border-box;
    @include flex-child-item-end-gutter( map_get($num-of-items,mobile) );
    @include breakpoint(tablet){
      flex-basis: calc(100%/#{map_get($num-of-items,tablet)});
      padding:0 $item-gutter $item-gutter $item-gutter;
      box-sizing: border-box;
      @include flex-child-item-end-gutter( map_get($num-of-items,tablet) );
    }
    @include breakpoint(desktop){
      flex-basis: calc(100%/#{map_get($num-of-items,desktop)});
      padding:0 $item-gutter $item-gutter $item-gutter;
      box-sizing: border-box;
      @include flex-child-item-end-gutter( map_get($num-of-items,desktop) );
    }
  }

  $item-gutter:60px;

  background: $harbor__faded_yellow;

  @include curve(full-curve-reverse);

  .container{
    padding-top:40px;
    //padding-bottom:40px;
    @include breakpoint(tablet) {
      text-align: center;
    }

    .items{
      display:flex;
      flex-direction: row;
      flex-wrap: wrap;
      @include breakpoint(tablet) {
        text-align: center;
      }
      >.item{
        //flex-basis: calc(100%);
        //padding:0 0 $item-gutter 0;
        //@include breakpoint(tablet){
        //  flex-basis: calc(100%/#{$num-of-items});
        //  padding:0 $item-gutter $item-gutter $item-gutter;
        //  box-sizing: border-box;
        //}

        @include flex-child-item-grid();

        .item-title{
          font-weight: bold;
        }
      }
    }
  }
}
